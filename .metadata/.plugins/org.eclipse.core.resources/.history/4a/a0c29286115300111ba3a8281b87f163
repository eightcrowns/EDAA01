
public class Sudoku {
	private int[][] sudoku; // [y][x], y=rader av kolumner, x=kolumner i rader
	
	public Sudoku(int[][] sudoku) {
		this.sudoku = sudoku;
	}
	
	public boolean solve() {
		return solve(0, 0);
	}
	
	private boolean solve(int y, int x) {
		
	}
	
	/**
	 * Körs före num läggs till i matrisen.
	 * @param row
	 * @param num
	 * @return
	 */
	private boolean checkRow(int row, int num) {
		int i = 0;
		while (i < 9 && num != sudoku[row][i]) {
			i++;
		}
		return i == 9;
	}
	
	private boolean checkColumn(int num, int x) {
		int i = 0;
		while (i < 9 && num != sudoku[i][x]) {
			i++;
		}
		return i == 9;
	}
	
	private boolean checkRegion(int y, int x) {
//		boolean duplicates = false;
//		for (int row = (y / 3) * 3; row < (y / 3 + 1) * 3; row++) {
//			for (int col = (x / 3) * 3; col < (x / 3 +1) * 3; col++) {
//				if (row != 0 && sudoku[row == col) {
//					duplicates = true;
//				}
//			}
//		}
		if ()
	}
}
